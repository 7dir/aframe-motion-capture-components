!function(t){function e(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("motion-capture-controls",{schema:{capture:{default:!0}},init:function(){var t=this;this.active=!1,this.currentStroke=null,this.strokeEntities=[],this.drawing=!1,this.el.addEventListener("buttonchanged",function(e){if(t.data.enabled&&1===e.detail.id){var r=e.detail.state.value;t.sizeModifier=r,r>.1?t.active||(t.startNewStroke(),t.active=!0):(t.active&&(t.previousEntity=t.currentEntity,t.currentStroke=null),t.active=!1)}})},tick:function(){var t=new THREE.Vector3,e=new THREE.Quaternion,r=new THREE.Vector3;return function(i,n){if(this.currentStroke&&this.active){this.obj.matrixWorld.decompose(t,e,r);var o=this.system.getPointerPosition(t,e);this.currentStroke.addPoint(t,e,o,this.sizeModifier,i)}}}(),startNewStroke:function(){this.currentStroke=this.system.addNewStroke(this.data.brush,this.color,this.data.size),this.el.emit("stroke-started",{entity:this.el,stroke:this.currentStroke})}})}]);